{"metadata":{"modules":[{"name":"GUUnitsGeneratorConversions"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:27GUUnitsGeneratorConversions13SignConverterV7convert_9otherUnit4from2toS2S_xAA5SignsOAItAA0H8ProtocolRzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Unit"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"otherUnit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Unit"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:27GUUnitsGeneratorConversions5SignsO","kind":"typeIdentifier","text":"Signs"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:27GUUnitsGeneratorConversions5SignsO","kind":"typeIdentifier","text":"Signs"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"title":"convert(_:otherUnit:from:to:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions","doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/SignConverter"]]},"abstract":[{"text":"Change the sign of some unit. This function assumes you are converting to the same unit","type":"text"},{"text":" ","type":"text"},{"text":"(eg. centimetres to centimetres). The purpose of this function is to change the","type":"text"},{"text":" ","type":"text"},{"text":"underlying C-type. A typical use-case is to assist a user who requires more precision; so they","type":"text"},{"text":" ","type":"text"},{"text":"might need to convert a centimetres_t into a centimetres_d (int to double). This function is","type":"text"},{"text":" ","type":"text"},{"text":"used to generate the c-style cast for this type of conversion.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Unit","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"str","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"otherUnit","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Unit","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"sign","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/Signs","text":"Signs","preciseIdentifier":"s:27GUUnitsGeneratorConversions5SignsO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"otherSign","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/Signs","text":"Signs","preciseIdentifier":"s:27GUUnitsGeneratorConversions5SignsO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Unit","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/UnitProtocol","text":"UnitProtocol","preciseIdentifier":"s:27GUUnitsGeneratorConversions12UnitProtocolP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A string of generated c-code that will convert "},{"type":"emphasis","inlineContent":[{"type":"text","text":"str"}]},{"type":"text","text":" to the correct unit."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"str","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The unit to convert."}]}]},{"name":"otherUnit","content":[{"type":"paragraph","inlineContent":[{"text":"The equivalent unit to convert into.","type":"text"}]}]},{"name":"sign","content":[{"type":"paragraph","inlineContent":[{"text":"The sign of the current unit.","type":"text"}]}]},{"name":"otherSign","content":[{"type":"paragraph","inlineContent":[{"text":"The sign of the new unit.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"name":"Warning","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This function assumes that you are converting to the same unit, just with a different"},{"type":"text","text":" "},{"type":"text","text":"type (i.e. there is no unit conversion being performed in this function)."},{"type":"text","text":" "},{"type":"text","text":"The result of the cast will be incorrect if this is not the case."}],"type":"paragraph"}],"style":"warning"}]}],"variants":[{"paths":["\/documentation\/guunitsgeneratorconversions\/signconverter\/convert(_:otherunit:from:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/SignConverter\/convert(_:otherUnit:from:to:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://GUUnitsGeneratorConversions/documentation/GUUnitsGeneratorConversions/SignConverter/convert(_:otherUnit:from:to:)":{"abstract":[{"text":"Change the sign of some unit. This function assumes you are converting to the same unit","type":"text"},{"text":" ","type":"text"},{"text":"(eg. centimetres to centimetres). The purpose of this function is to change the","type":"text"},{"text":" ","type":"text"},{"text":"underlying C-type. A typical use-case is to assist a user who requires more precision; so they","type":"text"},{"text":" ","type":"text"},{"text":"might need to convert a centimetres_t into a centimetres_d (int to double). This function is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"used to generate the c-style cast for this type of conversion."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Unit"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"otherUnit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Unit"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:27GUUnitsGeneratorConversions5SignsO","kind":"typeIdentifier","text":"Signs"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signs","preciseIdentifier":"s:27GUUnitsGeneratorConversions5SignsO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","url":"\/documentation\/guunitsgeneratorconversions\/signconverter\/convert(_:otherunit:from:to:)","kind":"symbol","title":"convert(_:otherUnit:from:to:)","identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/SignConverter\/convert(_:otherUnit:from:to:)","role":"symbol"},"doc://GUUnitsGeneratorConversions/documentation/GUUnitsGeneratorConversions":{"kind":"symbol","title":"GUUnitsGeneratorConversions","type":"topic","url":"\/documentation\/guunitsgeneratorconversions","identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions","abstract":[{"type":"text","text":"A target for generating the GUUnits package."}],"role":"collection"},"doc://GUUnitsGeneratorConversions/documentation/GUUnitsGeneratorConversions/Signs":{"identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/Signs","navigatorTitle":[{"kind":"identifier","text":"Signs"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Signs"}],"title":"Signs","abstract":[{"text":"Enum containing the standard guunits signs.","type":"text"}],"type":"topic","url":"\/documentation\/guunitsgeneratorconversions\/signs"},"doc://GUUnitsGeneratorConversions/documentation/GUUnitsGeneratorConversions/SignConverter":{"url":"\/documentation\/guunitsgeneratorconversions\/signconverter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignConverter"}],"navigatorTitle":[{"kind":"identifier","text":"SignConverter"}],"identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/SignConverter","kind":"symbol","role":"symbol","title":"SignConverter","abstract":[{"type":"text","text":"A struct that creates c-code for converting a unit between itâ€™s signed and unsigned variants."},{"type":"text","text":" "},{"type":"text","text":"A unit may need to be represented as a different type in the c-implementation. The functions in"},{"type":"text","text":" "},{"type":"text","text":"this struct perform a cast into the desired unit without performing any unit conversions."}],"type":"topic"},"doc://GUUnitsGeneratorConversions/documentation/GUUnitsGeneratorConversions/UnitProtocol":{"url":"\/documentation\/guunitsgeneratorconversions\/unitprotocol","navigatorTitle":[{"text":"UnitProtocol","kind":"identifier"}],"kind":"symbol","title":"UnitProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnitProtocol","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/GUUnitsGeneratorConversions\/documentation\/GUUnitsGeneratorConversions\/UnitProtocol","abstract":[{"type":"text","text":"A protocol for representing unit types that exist within a unit category."},{"type":"text","text":" "},{"type":"text","text":"A unit category represents a type of data that can be expressed with different"},{"type":"text","text":" "},{"type":"text","text":"units. Examples include Distance, Time, Angles, etc. Conforming types might"},{"type":"text","text":" "},{"text":"contain many units for a category, e.g. Distance can have metres, centimetres,","type":"text"},{"text":" ","type":"text"},{"text":"millimetres, etc.","type":"text"}]}}}